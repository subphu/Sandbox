#version 460
#extension GL_ARB_separate_shader_objects : enable

#include "../functions/constants.glsl"
#include "../functions/interference.glsl"

layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0, rgba8) uniform writeonly image2D outputImage;

layout(push_constant) uniform Misc {
    uint opdSample;
    uint rSample;
};

vec3 measure(float opd) {
    return vec3(
        interferences(650e-9, 60e-9, opd),
        interferences(532e-9, 40e-9, opd),
        interferences(441e-9, 30e-9, opd)
    );
}

void main() {
    uint xi = gl_GlobalInvocationID.x;
    uint yi = gl_GlobalInvocationID.y;
    
    if(gl_GlobalInvocationID.x >= opdSample) return;
    if(gl_GlobalInvocationID.y >= rSample  ) return;

    float rScale = float(yi) / float(rSample - 1);
    float opdScale = float(xi) / float(opdSample);
    float opd = maxOpd * opdScale;

    vec3 col = fullInterferences(opd, rScale);

    imageStore(outputImage, ivec2(xi, yi), vec4(col, 1.0));
}
